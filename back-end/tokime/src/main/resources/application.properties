spring.application.name=tokime
# :8080하면 해당 설정이 없을 시 디포트 실행값입니다
server.port=${PORT:8080}

spring.config.import=optional:file:.env[.properties], classpath:application-oauth.yml, classpath:application-jwt.yml, classpath:application-url.yml

# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 데이터베이스 소스 URL
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
# 데이터베이스 사용자 이름 및 비밀번호
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}

# JPA 및 Hibernate 설정
# 스키마 자동 생성 및 업데이트 옵션 (create, update, validate, none)
spring.jpa.hibernate.ddl-auto=update
# Hibernate가 생성하는 SQL 쿼리를 콘솔에 출력
spring.jpa.show-sql=true

# 로그 설정 (선택 사항)
# Hibernate SQL 쿼리 로그 설정
logging.level.org.hibernate.SQL=DEBUG
# Hibernate SQL 파라미터 바인딩 로그 설정
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Hibernate SQL 쿼리 포맷팅 설정
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


# redis 설정
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.password=${REDIS_PASSWORD}

# 로그 레벨 설정
logging.level.root=INFO
#debug=true

# 이미지 업로드, 다운로드 관련 설정
#spring.servlet.multipart.max-file-size=10MB
#spring.servlet.multipart.max-request-size=10MB
#spring.mvc.static-path-pattern=/static/**
#spring.resources.static-locations=classpath:/static/

spring.resources.add-mappings=true

springdoc.swagger-ui.path=${SWAGGER_UI}
springdoc.api-docs.path=${SWAGGER_DOCS}